#!/usr/bin/env python3

# Copyright 2014 Andrew Schwartzmeyer

# Script to symlink all non-ignored org files found in recursive
# search of base directory to target directory.

from argparse import ArgumentParser, ArgumentTypeError
from os import access, environ, symlink, walk
from os.path import basename, dirname, expanduser, isdir, join

def expanded_dir(d):
    d = expanduser(d)
    if isdir(d):
        return d
    else:
        raise ArgumentTypeError("{} is not a valid directory".format(d))

if __name__ == '__main__':
    parser = ArgumentParser(description='Accumulate org files')
    parser.add_argument('-b', '--base', type=expanded_dir, default='~/Documents')
    parser.add_argument('-t', '--target', type=expanded_dir, default='~/.org')
    parser.add_argument('-i', '--ignore', action='append_const', const=str,
                        default=['#', 'archive', 'assignment', 'lab', 'phase', 'presentation', 'midterm', 'README', 'web', 'write-up', 'write_up'])
    parser.add_argument('-v', '--verbose', action='count', default=0)
    args = parser.parse_args()

    for root, dirs, files in walk(args.base):
        for f in files:
            name = join(root, f)
            if name.endswith('org'):
                if any(ignore in name for ignore in args.ignore):
                    if args.verbose >= 1:
                        print("Ignored {}".format(name))
                    continue
                else:
                    rename = basename(dirname(name)) + '-' + basename(name)
                    if args.verbose >= 2:
                        print("Linking {} as {}".format(name, rename))
                symlink(name, join(args.target, rename))
